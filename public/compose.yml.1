services:
  web:
    image: registry.magic-cat.world/magic-cat/nginx
    container_name: web
    restart: always
    build:
      context: ../
      dockerfile: ./docker/nginx.Dockerfile
      platforms:
        - "linux/amd64"
        - "linux/arm64"
    volumes:
      - "nginx:/etc/nginx/conf.d"
      - "./ssl:/etc/letsencrypt"
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
      - "./nginx_conf:/etc/nginx/conf.d/nginx_conf"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
  api:
    image: registry.magic-cat.world/magic-cat/api
    container_name: api
    restart: always
    build:
      context: ../
      dockerfile: ./docker/api.Dockerfile
    environment:
      - DARCULA_PROJECT_DIR=${PWD:?}
    volumes:
      - "nginx:/etc/nginx/conf.d"
      - "./public:/code/public"
      - "./pages-list:/code/pages-list"
      - "/:/host"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      web-msg-sender-server:
        condition: service_started
  db:
    image: mariadb:10
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=root
      - MARIADB_DATABASE=magic-cat
    volumes:
      - "./docker/mysql:/var/lib/mysql"
    ports:
      - "127.0.0.1:3306:3306"
    healthcheck:
      test:
        [
          "CMD",
          "mysql",
          "magic-cat",
          "-uroot",
          "-proot",
          "-e",
          "select 1"
        ]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s
  redis:
    image: redis:7
    restart: always
    volumes:
      - "./docker/redis:/data"
    ports:
      - "127.0.0.1:6379:6379"
    command: redis-server --save 60 1 --loglevel warning
  web-msg-sender-server:
    image: registry.magic-cat.world/magic-cat/web-msg-sender-server
    container_name: web-msg-sender-server
    restart: always
    ports:
      - "127.0.0.1:8888:8888"
    command: --client-api=yes
  watchtower:
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: -c web api web-msg-sender-server

volumes:
  nginx:
